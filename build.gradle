apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

ext {
    projectName = rootProject.name
}

group = 'com.${projectName}'
version = '1.0.0'

description = """redant"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "com.redant.main.ServerBootstrap"

repositories {
    jcenter()
    mavenCentral()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://repo.maven.apache.org/maven2/'}
}

dependencies {
    // transitive:false means do not auto dependencies
    compile group: 'commons-beanutils', name: 'commons-beanutils', version:'1.9.2',transitive:false
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.25',transitive:false
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version:'1.7.25',transitive:false
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.7'
    compile group: 'io.netty', name: 'netty-all', version:'4.1.9.Final'
    compile group: 'cglib', name: 'cglib', version:'3.2.4'
    compile group: 'org.mortbay.jetty', name: 'jetty', version:'6.1.26'
    compile group: 'org.apache.zookeeper', name: 'zookeeper', version:'3.5.1-alpha'
    compile group: 'org.apache.curator', name: 'curator-recipes', version:'3.2.1'
    compile group: 'com.alibaba', name: 'fastjson', version:'1.2.31',transitive:false
    compile group: 'com.xiaoleilu', name: 'hutool-all', version:'3.1.0',transitive:false
    testCompile group: 'junit', name: 'junit', version:'4.12'
//    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
}

// define the jar
jar {
    String libs = ''
    configurations.runtime.each {
        libs += " lib\\" + it.name
    }
    manifest {
        attributes 'Main-Class': mainClassName
        attributes 'Class-Path': libs
    }
}

// skip the default create startScripts task
startScripts.enabled = false

// copy jar into libs directory
task copyJar(type:Copy){
    from configurations.runtime
    into ('build/libs')
}

task copyLicense {
    outputs.file new File("$buildDir/LICENSE")
    doLast {
        copy {
            from "LICENSE"
            into "$buildDir"
        }
    }
}

applicationDistribution.from(copyLicense) {
    into ""
}

// use > gradle release command to build release file
task release(type:Copy,dependsOn:[build,copyJar]) {

}